'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _redux = require('redux');

var _reduxImmutable = require('redux-immutable');

var _sweetalertReact = require('sweetalert-react');

var _sweetalertReact2 = _interopRequireDefault(_sweetalertReact);

var _enzyme = require('enzyme');

var _ReduxSweetAlert = require('../ReduxSweetAlert');

var _ReduxSweetAlert2 = _interopRequireDefault(_ReduxSweetAlert);

var _reducer = require('../reducer');

var _reducer2 = _interopRequireDefault(_reducer);

var _reducerImmutable = require('../reducer-immutable');

var _reducerImmutable2 = _interopRequireDefault(_reducerImmutable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

it('should be ok when render component with store', function () {
  var rootReducer = (0, _redux.combineReducers)({
    sweetalert: _reducer2.default
  });
  var store = (0, _redux.createStore)(rootReducer);
  var context = {
    store: store
  };
  var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_ReduxSweetAlert2.default, null), { context: context });

  var component = wrapper.find(_sweetalertReact2.default);

  expect(component).toHaveLength(1);
  expect(component.prop('show')).toBe(false);
  expect(component.prop('title')).toBe('');
});

it('should be ok when render component with immutable store', function () {
  var rootReducer = (0, _reduxImmutable.combineReducers)({
    sweetalert: _reducerImmutable2.default
  });
  var store = (0, _redux.createStore)(rootReducer);
  var context = {
    store: store
  };
  var wrapper = (0, _enzyme.mount)(_react2.default.createElement(_ReduxSweetAlert2.default, null), { context: context });

  var component = wrapper.find(_sweetalertReact2.default);

  expect(component).toHaveLength(1);
  expect(component.prop('show')).toBe(false);
  expect(component.prop('title')).toBe('');
});